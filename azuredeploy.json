{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "virtualNetworkName": {
        "type": "string",
        "defaultValue": "Vnet",
        "metadata": {
          "description": "Name of the VNet."
        }
      },
      "vnetAddressPrefix": {
        "type": "string",
        "defaultValue": "192.168.0.0/16",
        "metadata": {
          "description": "Address space for the VNet."
        }
      },
      "gatewaySubnetPrefix": {
        "type": "string",
        "defaultValue": "192.168.200.0/24",
        "metadata": {
          "description": "The prefix for the GatewaySubnet where the VirtualNetworkGateway will be deployed. This must be at least /29."
        }
      },
      "gatewayPublicIPName": {
        "type": "string",
        "defaultValue": "VnetPip",
        "metadata": {
          "description": "The name of the PublicIP attached to the VirtualNetworkGateway."
        }
      },
      "gatewayName": {
        "type": "string",
        "defaultValue": "VnetGw",
        "metadata": {
          "description": "The name of the VirtualNetworkGateway."
        }
      },
      "gatewaySku": {
        "type": "string",
        "defaultValue": "Standard",
        "metadata": {
          "description": "The Sku of the Gateway. This must be one of Basic, Standard or HighPerformance."
        }
      },
      "vpnClientAddressPoolPrefix": {
        "type": "string",
        "defaultValue": "172.16.201.0/24",
        "metadata": {
          "description": "The IP address range from which VPN clients will receive an IP address when connected. Range specified must not overlap with on-premise network."
        }
      },
      "clientRootCertName": {
        "type": "string",
        "defaultValue": "P2SRootCert",
        "metadata": {
          "description": "The name of the client root certificate used to authenticate VPN clients. This is a common name used to identify the root cert."
        }
      },
      "clientRootCertData": {
        "type": "string",
        "metadata": {
          "description": "Client root certificate data used to authenticate VPN clients."
        }
      },
      "revokedCertName": {
        "type": "string",
        "defaultValue": "RevokedCert1",
        "metadata": {
          "description": "The name of revoked certificate, if any. This is a common name used to identify a given revoked certificate."
        }
      },
      "revokedCertThumbprint": {
        "type": "string",
        "defaultValue": "633EBFFBD01B6049D61E3CF059CFD940C8CE5780",
        "metadata": {
          "description": "Thumbprint of the revoked certificate. This would revoke VPN client certificates matching this thumbprint from connecting to the VNet."
        }
      },
      "storageAccountName": {
        "type": "String",
        "defaultValue": "p2stestacct",
        "metadata": {
          "description": "Storage account that will host file share"
        }
      },
      "fileShareName": {
        "type": "string",
        "defaultValue": "p2sfileshare",
        "metadata": {
            "description": "Name of file share to be created"
        }
    }
    },
    "variables": {
      "gatewaySubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), 'GatewaySubnet')]"
    },
    "resources": [
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[parameters('virtualNetworkName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[parameters('vnetAddressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "GatewaySubnet",
              "properties": {
                "addressPrefix": "[parameters('gatewaySubnetPrefix')]",
                "serviceEndpoints": [
                  {
                      "service": "Microsoft.Storage"
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[parameters('gatewayPublicIPName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "publicIPAllocationMethod": "Dynamic"
        }
      },
      {
        "apiVersion": "2018-04-01",
        "type": "Microsoft.Network/virtualNetworkGateways",
        "name": "[parameters('gatewayName')]",
        "location": "[resourceGroup().location]",
        "dependsOn": [
          "[concat('Microsoft.Network/publicIPAddresses/', parameters('gatewayPublicIPName'))]",
          "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('gatewaySubnetRef')]"
                },
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('gatewayPublicIPName'))]"
                }
              },
              "name": "vnetGatewayConfig"
            }
          ],
          "sku": {
            "name": "[parameters('gatewaySku')]",
            "tier": "[parameters('gatewaySku')]"
          },
          "gatewayType": "Vpn",
          "vpnType": "RouteBased",
          "enableBgp": "false",
          "vpnClientConfiguration": {
            "vpnClientAddressPool": {
              "addressPrefixes": [
                "[parameters('vpnClientAddressPoolPrefix')]"
              ]
            },
            "vpnClientProtocols": [
              "SSTP"
            ],
            "vpnClientRootCertificates": [
              {
                "name": "[parameters('clientRootCertName')]",
                "properties": {
                  "PublicCertData": "[parameters('clientRootCertData')]"
                }
              }
            ],
            "vpnClientRevokedCertificates": [
              {
                "name": "[parameters('revokedCertName')]",
                "properties": {
                  "Thumbprint": "[parameters('revokedCertThumbprint')]"
                }
              }
            ]
          }
        }
      },
      {
        "type": "Microsoft.Storage/storageAccounts",
        "sku": {
            "name": "Standard_LRS"
        },
        "kind": "StorageV2",
        "name": "[parameters('storageAccountName')]",
        "apiVersion": "2018-07-01",
        "location": "[resourceGroup().location]",
        "properties": {
            "accessTier": "Hot",
            "supportsHttpsTrafficOnly": "true"
        },
        "dependsOn": []
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "name": "create-share-container",
      "apiVersion": "2018-04-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
          "[variables('storageAccountName')]"
      ],
      "properties": {
          "containers": [
              {
                  "name": "share-create-container",
                  "properties": {
                      "image": "microsoft/azure-cli:latest",
                      "command": [
                          "az",
                          "storage",
                          "share",
                          "create",
                          "--name",
                          "[parameters('fileShareName')]"
                      ],
                      "environmentVariables": [
                          {
                              "name": "AZURE_STORAGE_KEY",
                              "value": "[listKeys(variables('storageAccountName'),'2018-02-01').keys[0].value]"
                          },
                          {
                              "name": "AZURE_STORAGE_ACCOUNT",
                              "value": "[variables('storageAccountName')]"
                          }
                      ],
                      "resources": {
                          "requests": {
                              "cpu": 1,
                              "memoryInGB": 1
                          }
                      }
                  }
              }
          ],
          "restartPolicy": "OnFailure",
          "osType": "Linux"
      }
    }
    ]
  }
  
